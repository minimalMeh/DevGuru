//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevGuru.Resources.en {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class en {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal en() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DevGuru.Resources.en.en", typeof(en).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Publisher issues events of interest to other objects. These events occur when the publisher changes its state or executes some behaviors. Publishers contain a subscription infrastructure that lets new subscribers join and current subscribers leave the list..
        /// </summary>
        internal static string Observer_Step1 {
            get {
                return ResourceManager.GetString("Observer_Step1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When a new event happens, the publisher goes over the subscription list and calls the notification method declared in the subscriber interface on each subscriber object..
        /// </summary>
        internal static string Observer_Step2 {
            get {
                return ResourceManager.GetString("Observer_Step2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Subscriber interface declares the notification interface. In most cases, it consists of a single update method. The method may have several parameters that let the publisher pass some event details along with the update..
        /// </summary>
        internal static string Observer_Step3 {
            get {
                return ResourceManager.GetString("Observer_Step3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usually, subscribers need some contextual information to handle the update correctly. For this reason, publishers often pass some context data as arguments of the notification method. The publisher can pass itself as an argument, letting subscriber fetch any required data directly..
        /// </summary>
        internal static string Observer_Step4 {
            get {
                return ResourceManager.GetString("Observer_Step4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Client creates publisher and subscriber objects separately and then registers subscribers for publisher updates..
        /// </summary>
        internal static string Observer_Step5 {
            get {
                return ResourceManager.GetString("Observer_Step5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Client creates publisher and subscriber objects separately and then registers subscribers for publisher updates..
        /// </summary>
        internal static string Observer_Step6 {
            get {
                return ResourceManager.GetString("Observer_Step6", resourceCulture);
            }
        }
    }
}
